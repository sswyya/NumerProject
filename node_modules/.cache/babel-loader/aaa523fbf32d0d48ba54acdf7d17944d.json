{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\src\\\\Linear Algebra\\\\Jordan.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button } from 'antd';\nimport '../screen.css';\nimport 'antd/dist/antd.css';\nvar InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar A = [],\n    B = [],\n    matrixA = [],\n    matrixB = [],\n    output = [];\n\nvar Jordan =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Jordan, _Component);\n\n  function Jordan() {\n    var _this;\n\n    _classCallCheck(this, Jordan);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Jordan).call(this));\n    _this.state = {\n      row: 0,\n      column: 0,\n      showDimentionForm: true,\n      showDimentionButton: true,\n      showMatrixForm: false,\n      showMatrixButton: false,\n      showOutputCard: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.jordan = _this.jordan.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Jordan, [{\n    key: \"jordan\",\n    value: function jordan(n) {\n      this.initMatrix();\n\n      if (A[0][0] === 0) {\n        //pivoting\n        var tempRow = JSON.parse(JSON.stringify(A[0]));\n        var tempColumn = B[0];\n        A[0] = A[1];\n        A[1] = tempRow;\n        B[0] = B[1];\n        B[1] = tempColumn;\n      } //Forward eliminate\n\n\n      for (var k = 0; k < n; k++) {\n        for (var i = k + 1; i < n; i++) {\n          var factor = A[i][k] / A[k][k];\n\n          for (var j = k; j < n; j++) {\n            A[i][j] = A[i][j] - factor * A[k][j];\n          }\n\n          B[i] = B[i] - factor * B[k];\n        }\n      } //Backward Substitution\n\n\n      for (k = n - 1; k >= 0; k--) {\n        for (i = k; i >= 0; i--) {\n          if (i === k) {\n            //Identity matrix\n            factor = 1 / A[i][k];\n\n            for (j = 0; j < n; j++) {\n              A[i][j] = A[i][j] * factor;\n            }\n\n            B[i] = B[i] * factor;\n          } else {\n            factor = A[i][k] / A[k][k];\n\n            for (j = 0; j < n; j++) {\n              A[i][j] = A[i][j] - factor * A[k][j];\n            }\n\n            B[i] = B[i] - factor * B[k];\n          }\n        }\n      }\n\n      for (i = 0; i < n; i++) {\n        output.push(B[i]);\n        output.push(React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }));\n      }\n\n      this.setState({\n        showOutputCard: true\n      });\n    }\n  }, {\n    key: \"createMatrix\",\n    value: function createMatrix(row, column) {\n      for (var i = 1; i <= row; i++) {\n        for (var j = 1; j <= column; j++) {\n          matrixA.push(React.createElement(Input, {\n            style: {\n              width: \"18%\",\n              height: \"50%\",\n              backgroundColor: \"#06d9a0\",\n              marginInlineEnd: \"5%\",\n              marginBlockEnd: \"5%\",\n              color: \"white\",\n              fontSize: \"18px\",\n              fontWeight: \"bold\"\n            },\n            id: \"a\" + i + \"\" + j,\n            key: \"a\" + i + \"\" + j,\n            placeholder: \"a\" + i + \"\" + j,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }));\n        }\n\n        matrixA.push(React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }));\n        matrixB.push(React.createElement(Input, {\n          style: {\n            width: \"18%\",\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"b\" + i,\n          key: \"b\" + i,\n          placeholder: \"b\" + i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }));\n      }\n\n      this.setState({\n        showDimentionForm: false,\n        showDimentionButton: false,\n        showMatrixForm: true,\n        showMatrixButton: true\n      });\n    }\n  }, {\n    key: \"initMatrix\",\n    value: function initMatrix() {\n      for (var i = 0; i < this.state.row; i++) {\n        A[i] = [];\n\n        for (var j = 0; j < this.state.column; j++) {\n          A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n        }\n\n        B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          background: \"#FFFF\",\n          padding: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Gauss-Jordan Method\"), React.createElement(Card, {\n        bordered: true,\n        style: {\n          width: 400,\n          background: \"#f44336\",\n          color: \"#FFFFFFFF\"\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, this.state.showMatrixForm && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Matrix [A]\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), matrixA, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Vector [B]\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), matrixB), this.state.showDimentionForm && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Row\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"row\",\n        style: InputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Column\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"column\",\n        style: InputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), this.state.showDimentionButton && React.createElement(Button, {\n        id: \"dimention_button\",\n        onClick: function onClick() {\n          return _this2.createMatrix(_this2.state.row, _this2.state.column);\n        },\n        style: {\n          background: \"#4caf50\",\n          color: \"white\",\n          fontSize: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Submit\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), this.state.showMatrixButton && React.createElement(Button, {\n        id: \"matrix_button\",\n        style: {\n          background: \"blue\",\n          color: \"white\",\n          fontSize: \"20px\"\n        },\n        onClick: function onClick() {\n          return _this2.jordan(_this2.state.row);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Submit\")), this.state.showOutputCard && React.createElement(Card, {\n        title: \"Output\",\n        bordered: true,\n        style: {\n          width: 400,\n          background: \"#3d683d\",\n          color: \"#FFFFFFFF\",\n          float: \"left\"\n        },\n        onChange: this.handleChange,\n        id: \"answerCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontSize: \"24px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, output))));\n    }\n  }]);\n\n  return Jordan;\n}(Component);\n\nexport default Jordan;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\OneDrive\\เดสก์ท็อป\\Numerical-method-final\\src\\Linear Algebra\\Jordan.js"],"names":["React","Component","Card","Input","Button","InputStyle","background","color","fontWeight","fontSize","A","B","matrixA","matrixB","output","Jordan","state","row","column","showDimentionForm","showDimentionButton","showMatrixForm","showMatrixButton","showOutputCard","handleChange","bind","jordan","n","initMatrix","tempRow","JSON","parse","stringify","tempColumn","k","i","factor","j","push","setState","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","parseFloat","document","getElementById","value","event","target","name","padding","createMatrix","float"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {Card, Input, Button} from 'antd';\r\nimport '../screen.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\", \r\n    fontWeight: \"bold\", \r\n    fontSize: \"24px\"\r\n\r\n};\r\n\r\n\r\nvar A = [], B = [], matrixA = [], matrixB = [], output = []\r\nclass Jordan extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: 0,\r\n            column: 0,\r\n            showDimentionForm : true,\r\n            showDimentionButton: true,\r\n            showMatrixForm: false,\r\n            showMatrixButton: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.jordan = this.jordan.bind(this);\r\n    \r\n    }\r\n\r\n    jordan(n) {\r\n        this.initMatrix();\r\n        if (A[0][0] === 0) { //pivoting\r\n            var tempRow = JSON.parse(JSON.stringify(A[0]));\r\n            var tempColumn = B[0];\r\n            A[0] = A[1];\r\n            A[1] = tempRow;\r\n            B[0] = B[1];\r\n            B[1] = tempColumn;\r\n        }\r\n        //Forward eliminate\r\n        for(var k=0 ; k<n ; k++) {\r\n            for(var i=k+1 ; i<n ; i++) {\r\n                var factor = A[i][k] / A[k][k];\r\n                for (var j=k ; j<n ; j++) {\r\n                    A[i][j] = A[i][j] - factor*A[k][j];\r\n                }\r\n                B[i] = B[i] - factor*B[k];\r\n\r\n            }\r\n        }\r\n        //Backward Substitution\r\n        for (k=n-1 ; k>=0 ; k--) {\r\n            for(i=k ; i>=0 ; i--) {\r\n                \r\n                if (i === k) {//Identity matrix\r\n                    factor = 1 / A[i][k];\r\n            \r\n                    for (j=0 ; j<n ; j++) {\r\n                        A[i][j] = A[i][j] * factor;\r\n                    }\r\n                    B[i] = B[i] * factor;\r\n                \r\n                \r\n                }\r\n                else {\r\n                    factor = A[i][k] / A[k][k];\r\n                    for (j=0 ; j<n ; j++) {\r\n                        A[i][j] = A[i][j] - factor*A[k][j];\r\n                    }\r\n                    B[i] = B[i] - factor*B[k];\r\n                }\r\n            } \r\n        }\r\n        for (i=0 ; i<n ; i++) {\r\n            output.push(B[i]);\r\n            output.push(<br/>)\r\n        }\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n      \r\n    }\r\n    createMatrix(row, column) {\r\n        for (var i=1 ; i<=row ; i++) {\r\n            for (var j=1 ; j<=column ; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\", \r\n                    backgroundColor:\"#06d9a0\", \r\n                    marginInlineEnd: \"5%\", \r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }} \r\n                id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \r\n            }\r\n            matrixA.push(<br/>)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\", \r\n                backgroundColor:\"black\", \r\n                marginInlineEnd: \"5%\", \r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }} \r\n            id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\r\n                \r\n            \r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showDimentionButton: false,\r\n            showMatrixForm: true,\r\n            showMatrixButton: true\r\n        })\r\n        \r\n\r\n    }\r\n    initMatrix() {\r\n        for(var i=0 ; i<this.state.row ; i++) {\r\n            A[i] = []\r\n            for(var j=0 ; j<this.state.column ; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return(\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                \r\n                <div>\r\n                    <h2 style={{color: \"black\", fontWeight: \"bold\"}}>Gauss-Jordan Method</h2>\r\n                    <Card\r\n                    bordered={true}\r\n                    style={{ width: 400, background: \"#f44336\", color: \"#FFFFFFFF\"}}\r\n                    onChange={this.handleChange}\r\n                    >\r\n                        {this.state.showMatrixForm && <div><h2>Matrix [A]</h2><br/>{matrixA}<h2>Vector [B]<br/></h2>{matrixB}</div>}\r\n                        \r\n                        {this.state.showDimentionForm && \r\n                            <div>\r\n                                <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\r\n                                <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\r\n                            </div> \r\n                        }\r\n                        <br></br>\r\n                        {this.state.showDimentionButton && \r\n                            <Button id=\"dimention_button\" onClick= {\r\n                                ()=>this.createMatrix(this.state.row, this.state.column)\r\n                                }  \r\n                                style={{background: \"#4caf50\", color: \"white\", fontSize: \"20px\"}}>\r\n                                Submit<br></br>\r\n                                </Button>\r\n                        }\r\n                        {this.state.showMatrixButton && \r\n                            <Button \r\n                                id=\"matrix_button\"  \r\n                                style={{background: \"blue\", color: \"white\", fontSize: \"20px\"}}\r\n                                onClick={()=>this.jordan(this.state.row)}>\r\n                                Submit\r\n                            </Button>\r\n                        }\r\n                        \r\n                    </Card>\r\n                    \r\n                    {this.state.showOutputCard &&\r\n                        <Card\r\n                        title={\"Output\"}\r\n                        bordered={true}\r\n                        style={{ width: 400, background: \"#3d683d\", color: \"#FFFFFFFF\", float:\"left\"}}\r\n                        onChange={this.handleChange}  id=\"answerCard\">\r\n                            <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{output}</p>\r\n                        </Card>\r\n                    }\r\n\r\n                   \r\n                </div>\r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Jordan;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}