{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\src\\\\Linear Algebra\\\\Cholesky.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button } from 'antd';\nimport '../screen.css';\nimport 'antd/dist/antd.css';\nimport math from 'mathjs';\nvar InputStyle = {\n  background: \"#F690BB\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar A = [],\n    B = [],\n    matrixA = [],\n    matrixB = [],\n    output = [],\n    decompose = [];\n\nvar Cholesky =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Cholesky, _Component);\n\n  function Cholesky() {\n    var _this;\n\n    _classCallCheck(this, Cholesky);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cholesky).call(this));\n    _this.state = {\n      row: 0,\n      column: 0,\n      showDimentionForm: true,\n      showDimentionButton: true,\n      showMatrixForm: false,\n      showMatrixButton: false,\n      showOutputCard: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.cholesky = _this.cholesky.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Cholesky, [{\n    key: \"cholesky\",\n    value: function cholesky(n) {\n      this.initMatrix();\n      var x = new Array(n);\n      var y = new Array(n);\n\n      if (matrixA[0][0] === 0) {\n        for (var i = 0; i < n; i++) {\n          var temp = A[0][i];\n          matrixA[0][i] = B[i][i];\n          matrixB[0][i] = temp;\n        }\n      }\n\n      var matrixL = new Array(n);\n\n      for (i = 0; i < n; i++) {\n        matrixL[i] = new Array(n);\n\n        for (var j = 0; j < n; j++) {\n          matrixL[i][j] = 0;\n        }\n\n        x[i] = 0;\n        y[i] = 0;\n      }\n\n      matrixL[0][0] = Math.sqrt(matrixA[0][0]);\n\n      for (var k = 1; k < n; k++) {\n        for (i = 0; i < k; i++) {\n          var sum = 0;\n\n          if (i !== 0) {\n            for (j = 0; j < i; j++) {\n              sum += matrixL[i][j] * matrixL[k][j]; //console.log(sum);\n            }\n          }\n\n          matrixL[k][i] = (matrixA[i][k] - sum) / matrixL[i][i]; //ได้ค่า L ที่ไม่ใช่แนวทะแยง\n        }\n\n        var sum = 0;\n\n        for (j = 0; j < k; j++) {\n          sum += matrixL[k][j] * matrixL[k][j]; //console.log(k+ \" and \"+j);\n        }\n\n        matrixL[k][k] = Math.sqrt(matrixA[k][k] - sum);\n      }\n\n      console.log(matrixL);\n      y[0] = matrixB[0] / matrixL[0][0];\n\n      for (i = 1; i < n; i++) {\n        sum = 0;\n\n        for (j = 0; j < i; j++) {\n          sum += matrixL[i][j] * y[j];\n        }\n\n        y[i] = (matrixB[i] - sum) / matrixL[i][i];\n      }\n\n      console.log(y);\n      x[n - 1] = y[n - 1] / matrixL[n - 1][n - 1];\n\n      for (i = this.state.row - 2; i >= 0; i--) {\n        sum = 0;\n\n        for (j = i + 1; j < this.state.row; j++) {\n          sum += matrixL[j][i] * x[j];\n        }\n\n        x[i] = (y[i] - sum) / matrixL[i][i];\n      }\n\n      this.setState({\n        showOutputCard: true\n      });\n    }\n  }, {\n    key: \"summation\",\n    value: function summation(L, k) {\n      var sum = 0;\n\n      for (var i = 0; i < parseInt(this.state.row); i++) {\n        for (var j = 0; j < i - 2; j++) {\n          sum += L[i][j] * L[k][j];\n        }\n      }\n\n      return sum;\n    }\n  }, {\n    key: \"printFraction\",\n    value: function printFraction(value) {\n      return math.format(value, {\n        fraction: 'ratio'\n      });\n    }\n  }, {\n    key: \"createMatrix\",\n    value: function createMatrix(row, column) {\n      for (var i = 0; i < row; i++) {\n        for (var j = 0; j < column; j++) {\n          matrixA.push(React.createElement(Input, {\n            style: {\n              width: \"18%\",\n              height: \"50%\",\n              backgroundColor: \"#06d9a0\",\n              marginInlineEnd: \"5%\",\n              marginBlockEnd: \"5%\",\n              color: \"white\",\n              fontSize: \"18px\",\n              fontWeight: \"bold\"\n            },\n            id: \"a\" + (i + 1) + \"\" + (j + 1),\n            key: \"a\" + (i + 1) + \"\" + (j + 1),\n            placeholder: \"a\" + (i + 1) + \"\" + (j + 1),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }));\n        }\n\n        matrixA.push(React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }));\n        matrixB.push(React.createElement(Input, {\n          style: {\n            width: \"18%\",\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"b\" + (i + 1),\n          key: \"b\" + (i + 1),\n          placeholder: \"b\" + (i + 1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }));\n      }\n\n      this.setState({\n        showDimentionForm: false,\n        showDimentionButton: false,\n        showMatrixForm: true,\n        showMatrixButton: true\n      });\n    }\n  }, {\n    key: \"initMatrix\",\n    value: function initMatrix() {\n      for (var i = 0; i < this.state.row; i++) {\n        A[i] = [];\n\n        for (var j = 0; j < this.state.column; j++) {\n          A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n        }\n\n        B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          background: \"#FFFF\",\n          padding: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Cholesky Decomposition\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Card, {\n        bordered: true,\n        style: {\n          width: 400,\n          background: \"#b39eb5\",\n          color: \"#FFFFFFFF\"\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, this.state.showMatrixForm && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Matrix [A]\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), matrixA, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Vector [B]\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })), matrixB), this.state.showDimentionForm && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Row\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"row\",\n        style: InputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Column\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"column\",\n        style: InputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), this.state.showDimentionButton && React.createElement(Button, {\n        id: \"dimention_button\",\n        onClick: function onClick() {\n          return _this2.createMatrix(_this2.state.row, _this2.state.column);\n        },\n        style: {\n          background: \"#4caf50\",\n          color: \"white\",\n          fontSize: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Submit\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })), this.state.showMatrixButton && React.createElement(Button, {\n        id: \"matrix_button\",\n        style: {\n          background: \"blue\",\n          color: \"white\",\n          fontSize: \"20px\"\n        },\n        onClick: function onClick() {\n          return _this2.cholesky(_this2.state.row);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Submit\")), this.state.showOutputCard && React.createElement(Card, {\n        title: \"Output\",\n        bordered: true,\n        style: {\n          width: 400,\n          background: \"#3d683d\",\n          color: \"#FFFFFFFF\",\n          float: \"left\"\n        },\n        onChange: this.handleChange,\n        id: \"answerCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontSize: \"24px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, output))));\n    }\n  }]);\n\n  return Cholesky;\n}(Component);\n\nexport default Cholesky;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\OneDrive\\เดสก์ท็อป\\Numerical-method-final\\src\\Linear Algebra\\Cholesky.js"],"names":["React","Component","Card","Input","Button","math","InputStyle","background","color","fontWeight","fontSize","A","B","matrixA","matrixB","output","decompose","Cholesky","state","row","column","showDimentionForm","showDimentionButton","showMatrixForm","showMatrixButton","showOutputCard","handleChange","bind","cholesky","n","initMatrix","x","Array","y","i","temp","matrixL","j","Math","sqrt","k","sum","console","log","setState","L","parseInt","value","format","fraction","push","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","parseFloat","document","getElementById","event","target","name","padding","createMatrix","float"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {Card, Input, Button} from 'antd';\r\nimport '../screen.css';\r\nimport 'antd/dist/antd.css';\r\nimport math from 'mathjs';\r\nconst InputStyle = {\r\n    background: \"#F690BB\",\r\n    color: \"white\", \r\n    fontWeight: \"bold\", \r\n    fontSize: \"24px\"\r\n\r\n};\r\n\r\nvar A = [], B = [], matrixA = [], matrixB = [], output = [], decompose = [];\r\nclass Cholesky extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: 0,\r\n            column: 0,\r\n            showDimentionForm : true,\r\n            showDimentionButton: true,\r\n            showMatrixForm: false,\r\n            showMatrixButton: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.cholesky = this.cholesky.bind(this)\r\n    \r\n    }\r\n\r\n    cholesky(n) {\r\n        this.initMatrix();\r\n        var  x  = new Array(n);\r\n        var  y  = new Array(n)\r\n\r\n\r\n        if (matrixA[0][0] === 0) {\r\n            for (var i=0 ; i<n ; i++) {\r\n                var temp = A[0][i];\r\n                matrixA[0][i] = B[i][i];\r\n                matrixB[0][i] = temp;\r\n            }\r\n        }\r\n        var matrixL = new Array(n);\r\n        for(i=0;i<n;i++){\r\n            matrixL[i]  = new Array(n); \r\n            for(var j=0;j<n;j++){\r\n                matrixL[i][j] = 0;\r\n            }\r\n            x[i] = 0;\r\n            y[i] = 0;\r\n        }\r\n        matrixL[0][0] = Math.sqrt(matrixA[0][0]);\r\n        for(var k=1;k<n;k++){\r\n\r\n            for(i=0;i<k;i++){\r\n                var sum = 0;\r\n                if(i!==0){\r\n                    for(j=0;j<i;j++){\r\n                        sum += matrixL[i][j]*matrixL[k][j];\r\n                        //console.log(sum);\r\n                    }\r\n                }\r\n                matrixL[k][i]= (matrixA[i][k]-sum)/matrixL[i][i];//ได้ค่า L ที่ไม่ใช่แนวทะแยง\r\n            }\r\n            var sum = 0;\r\n            for(j=0;j<k;j++){\r\n                sum += matrixL[k][j]*matrixL[k][j];\r\n                //console.log(k+ \" and \"+j);\r\n            }\r\n            matrixL[k][k] = Math.sqrt(matrixA[k][k]-sum);\r\n        }\r\n        console.log(matrixL);\r\n        y[0] = matrixB[0]/matrixL[0][0];\r\n        for(i=1;i<n;i++){\r\n            sum = 0;\r\n            for(j=0;j<i;j++){\r\n                sum += matrixL[i][j]*y[j];\r\n            }\r\n            y[i] = (matrixB[i]-sum)/matrixL[i][i];\r\n        }\r\n        console.log(y);\r\n        x[n-1] = y[n-1]/matrixL[n-1][n-1];\r\n        for(i=this.state.row-2;i>=0;i--){\r\n            sum = 0;\r\n            for(j=i+1;j<this.state.row;j++){\r\n                sum += matrixL[j][i]*x[j];\r\n            }\r\n            x[i] = (y[i]-sum)/matrixL[i][i];\r\n        }\r\n\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n    }\r\n    summation(L, k) {\r\n        var sum = 0\r\n        for (var i=0 ; i<parseInt(this.state.row) ; i++) {\r\n            for (var j=0 ; j<i-2 ; j++) {\r\n                sum+= L[i][j]*L[k][j]\r\n            }\r\n        }\r\n        return sum\r\n    }\r\n    printFraction (value) {\r\n        return math.format(value, { fraction: 'ratio' })\r\n    }\r\n\r\n    createMatrix(row, column) {\r\n        for (var i=0 ; i<row ; i++) {\r\n            for (var j=0 ; j<column ; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\", \r\n                    backgroundColor:\"#06d9a0\", \r\n                    marginInlineEnd: \"5%\", \r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }} \r\n                id={\"a\"+(i+1)+\"\"+(j+1)} key={\"a\"+(i+1)+\"\"+(j+1)} placeholder={\"a\"+(i+1)+\"\"+(j+1)} />)  \r\n            }\r\n            matrixA.push(<br/>)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\", \r\n                backgroundColor:\"black\", \r\n                marginInlineEnd: \"5%\", \r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }} \r\n            id={\"b\"+(i+1)} key={\"b\"+(i+1)} placeholder={\"b\"+(i+1)} />)\r\n                \r\n            \r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showDimentionButton: false,\r\n            showMatrixForm: true,\r\n            showMatrixButton: true\r\n        })\r\n        \r\n\r\n    }\r\n    initMatrix() {\r\n        for(var i=0 ; i<this.state.row ; i++) {\r\n            A[i] = []\r\n            for(var j=0 ; j<this.state.column ; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return(\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\r\n                <h2 style={{color: \"black\", fontWeight: \"bold\"}}>Cholesky Decomposition</h2>\r\n                <div>\r\n                    <Card\r\n                      bordered={true}\r\n                      style={{ width: 400, background: \"#b39eb5\", color: \"#FFFFFFFF\"}}\r\n                      onChange={this.handleChange}\r\n                    >\r\n                        {this.state.showMatrixForm && <div><h2>Matrix [A]</h2><br/>{matrixA}<h2>Vector [B]<br/></h2>{matrixB}</div>}\r\n                        \r\n                        {this.state.showDimentionForm && \r\n                            <div>\r\n                                <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\r\n                                <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\r\n                            </div> \r\n                        }\r\n                        <br></br>\r\n                        {this.state.showDimentionButton && \r\n                            <Button id=\"dimention_button\" onClick= {\r\n                                ()=>this.createMatrix(this.state.row, this.state.column)\r\n                                }  \r\n                                style={{background: \"#4caf50\", color: \"white\", fontSize: \"20px\"}}>\r\n                                Submit<br></br>\r\n                                </Button>\r\n                        }\r\n                        {this.state.showMatrixButton && \r\n                            <Button \r\n                                id=\"matrix_button\"  \r\n                                style={{background: \"blue\", color: \"white\", fontSize: \"20px\"}}\r\n                                onClick={()=>this.cholesky(this.state.row)}>\r\n                                Submit\r\n                            </Button>\r\n                        }\r\n                        \r\n                    </Card>\r\n                    \r\n                    {this.state.showOutputCard &&\r\n                        <Card\r\n                        title={\"Output\"}\r\n                        bordered={true}\r\n                        style={{ width: 400, background: \"#3d683d\", color: \"#FFFFFFFF\", float:\"left\"}}\r\n                        onChange={this.handleChange}  id=\"answerCard\">\r\n                            <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{output}</p>\r\n                        </Card>\r\n                    }\r\n\r\n                   \r\n                </div>\r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Cholesky;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}