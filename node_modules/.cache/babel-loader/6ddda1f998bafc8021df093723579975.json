{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\src\\\\Linear Algebra\\\\Gradient.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button, Table } from 'antd';\nimport math from 'mathjs';\nimport '../screen.css';\nimport 'antd/dist/antd.css';\nvar InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar A = [],\n    B = [],\n    matrixA = [],\n    matrixB = [],\n    matrixX = [],\n    x,\n    epsilon,\n    dataInTable = [],\n    count = 1,\n    output;\nvar columns = [{\n  title: \"Iteration\",\n  dataIndex: \"iteration\",\n  key: \"iteration\"\n}, {\n  title: \"λ\",\n  dataIndex: \"lambda\",\n  key: \"lambda\"\n}, {\n  title: \"{X}\",\n  dataIndex: \"X\",\n  key: \"X\"\n}, {\n  title: \"Error\",\n  dataIndex: \"error\",\n  key: \"error\"\n}];\n\nvar Gradient =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Gradient, _Component);\n\n  function Gradient() {\n    var _this;\n\n    _classCallCheck(this, Gradient);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Gradient).call(this));\n    _this.state = {\n      row: 0,\n      column: 0,\n      showDimentionForm: true,\n      showDimentionButton: true,\n      showMatrixForm: false,\n      showMatrixButton: false,\n      showOutputCard: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.conjugate_gradient = _this.conjugate_gradient.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Gradient, [{\n    key: \"positive_definite\",\n    value: function positive_definite(dimention) {\n      var tempMatrix = [];\n\n      for (var i = 0; i < dimention; i++) {\n        tempMatrix[i] = [];\n\n        for (var j = 0; j < dimention; j++) {\n          tempMatrix[i][j] = A[i][j];\n        }\n      }\n\n      if (math.det(tempMatrix) <= 0) {\n        return false;\n      }\n\n      if (dimention !== this.state.row - 1) {\n        return this.positive_definite(++dimention);\n      }\n\n      return true;\n    }\n  }, {\n    key: \"conjugate_gradient\",\n    value: function conjugate_gradient() {\n      this.initMatrix();\n\n      if (!this.positive_definite(1)) {\n        output = \"This matrix doesn't positive definite\";\n        this.setState({\n          showOutputCard: true\n        });\n        return false;\n      } //find {R0}\n\n\n      var R = math.subtract(math.multiply(A, x), B);\n      console.log(R); //find D0\n\n      var D = math.multiply(R, -1);\n      console.log(D);\n\n      do {\n        //find λ\n        var λ = math.multiply(math.multiply(math.transpose(D), R), -1) / math.multiply(math.multiply(math.transpose(D), A), D);\n        console.log(λ);\n        /*------------------------------------------------------------------*/\n        //find new {X}\n\n        x = math.add(x, math.multiply(λ, D));\n        console.log(x); //find new {R}\n\n        R = math.subtract(math.multiply(A, x), B);\n        console.log(R); //find epsilon\n\n        epsilon = Math.sqrt(math.multiply(math.transpose(R), R)).toFixed(8);\n        this.appendTable(λ, JSON.stringify(x).split(',').join(\",\\n\"), epsilon);\n        console.log(epsilon);\n        var α = math.multiply(math.multiply(math.transpose(R), A), D) / math.multiply(math.transpose(D), math.multiply(A, D)).toFixed(8);\n        console.log(α);\n        D = math.add(math.multiply(R, -1), math.multiply(α, D));\n        console.log(D);\n      } while (epsilon > 0.000001);\n\n      output = x;\n      this.setState({\n        showOutputCard: true\n      });\n    }\n  }, {\n    key: \"createMatrix\",\n    value: function createMatrix(row, column) {\n      A = [];\n      B = [];\n      matrixA = [];\n      matrixB = [];\n      matrixX = [];\n      x = [];\n      dataInTable = [];\n\n      for (var i = 1; i <= row; i++) {\n        for (var j = 1; j <= column; j++) {\n          matrixA.push(React.createElement(Input, {\n            style: {\n              width: \"18%\",\n              height: \"50%\",\n              backgroundColor: \"#06d9a0\",\n              marginInlineEnd: \"5%\",\n              marginBlockEnd: \"5%\",\n              color: \"white\",\n              fontSize: \"18px\",\n              fontWeight: \"bold\"\n            },\n            id: \"a\" + i + \"\" + j,\n            key: \"a\" + i + \"\" + j,\n            placeholder: \"a\" + i + \"\" + j,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }));\n        }\n\n        matrixA.push(React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }));\n        matrixB.push(React.createElement(Input, {\n          style: {\n            width: \"18%\",\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"b\" + i,\n          key: \"b\" + i,\n          placeholder: \"b\" + i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }));\n        matrixX.push(React.createElement(Input, {\n          style: {\n            width: \"18%\",\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"x\" + i,\n          key: \"x\" + i,\n          placeholder: \"x\" + i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }));\n      }\n\n      this.setState({\n        showDimentionForm: false,\n        showDimentionButton: false,\n        showMatrixForm: true,\n        showMatrixButton: true\n      });\n    }\n  }, {\n    key: \"initMatrix\",\n    value: function initMatrix() {\n      for (var i = 0; i < this.state.row; i++) {\n        A[i] = [];\n\n        for (var j = 0; j < this.state.column; j++) {\n          A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n        }\n\n        B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n        x.push(parseFloat(document.getElementById(\"x\" + (i + 1)).value));\n      }\n    }\n  }, {\n    key: \"appendTable\",\n    value: function appendTable(lambda, x, error) {\n      dataInTable.push({\n        iteration: count++,\n        lambda: lambda,\n        X: x,\n        error: error\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          background: \"#FFFF\",\n          padding: \"30px\",\n          float: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Conjugate Gradient Iteration Method\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Card, {\n        bordered: true,\n        style: {\n          width: 400,\n          background: \"#f44336\",\n          color: \"#FFFFFFFF\",\n          float: \"left\"\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, this.state.showMatrixForm && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Matrix [A]\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }), matrixA, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Vector [B]\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })), matrixB, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Initial X\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })), matrixX), this.state.showDimentionForm && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Row\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"row\",\n        style: InputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Column\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"column\",\n        style: InputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), this.state.showDimentionButton && React.createElement(Button, {\n        id: \"dimention_button\",\n        onClick: function onClick() {\n          _this2.createMatrix(_this2.state.row, _this2.state.column);\n        },\n        style: {\n          background: \"#4caf50\",\n          color: \"white\",\n          fontSize: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Submit\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })), this.state.showMatrixButton && React.createElement(Button, {\n        id: \"matrix_button\",\n        style: {\n          background: \"blue\",\n          color: \"white\",\n          fontSize: \"20px\"\n        },\n        onClick: function onClick() {\n          return _this2.conjugate_gradient(parseInt(_this2.state.row));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Submit\")), this.state.showOutputCard && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: \"Output\",\n        bordered: true,\n        style: {\n          width: 400,\n          background: \"#3d683d\",\n          color: \"#FFFFFFFF\",\n          float: \"left\"\n        },\n        onChange: this.handleChange,\n        id: \"answerCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontSize: \"24px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, JSON.stringify(output))), React.createElement(Card, {\n        title: \"Output\",\n        bordered: true,\n        style: {\n          width: \"100%\",\n          background: \"#2196f3\",\n          color: \"#FFFFFFFF\",\n          float: \"left\",\n          marginBlockStart: \"2%\"\n        },\n        id: \"outputCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(Table, {\n        columns: columns,\n        dataSource: dataInTable,\n        bordered: true,\n        bodyStyle: {\n          fontWeight: \"bold\",\n          fontSize: \"18px\",\n          color: \"black\",\n          overflowX: \"scroll\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Gradient;\n}(Component);\n\nexport default Gradient;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\OneDrive\\เดสก์ท็อป\\Numerical-method-final\\src\\Linear Algebra\\Gradient.js"],"names":["React","Component","Card","Input","Button","Table","math","InputStyle","background","color","fontWeight","fontSize","A","B","matrixA","matrixB","matrixX","x","epsilon","dataInTable","count","output","columns","title","dataIndex","key","Gradient","state","row","column","showDimentionForm","showDimentionButton","showMatrixForm","showMatrixButton","showOutputCard","handleChange","bind","conjugate_gradient","dimention","tempMatrix","i","j","det","positive_definite","initMatrix","setState","R","subtract","multiply","console","log","D","λ","transpose","add","Math","sqrt","toFixed","appendTable","JSON","stringify","split","join","α","push","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","parseFloat","document","getElementById","value","lambda","error","iteration","X","event","target","name","padding","float","createMatrix","parseInt","marginBlockStart","overflowX"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,EAA6BC,KAA7B,QAAyC,MAAzC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AACA,IAAMC,UAAU,GAAG;AACfC,EAAAA,UAAU,EAAE,SADG;AAEfC,EAAAA,KAAK,EAAE,OAFQ;AAGfC,EAAAA,UAAU,EAAE,MAHG;AAIfC,EAAAA,QAAQ,EAAE;AAJK,CAAnB;AASA,IAAIC,CAAC,GAAG,EAAR;AAAA,IAAYC,CAAC,GAAG,EAAhB;AAAA,IAAoBC,OAAO,GAAG,EAA9B;AAAA,IAAkCC,OAAO,GAAG,EAA5C;AAAA,IAAgDC,OAAO,GAAG,EAA1D;AAAA,IAA+DC,CAA/D;AAAA,IAAmEC,OAAnE;AAAA,IAA4EC,WAAW,GAAG,EAA1F;AAAA,IAA8FC,KAAK,GAAC,CAApG;AAAA,IAAuGC,MAAvG;AACA,IAAIC,OAAO,GAAG,CACV;AACEC,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,SAAS,EAAE,WAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CADU,EAMV;AACIF,EAAAA,KAAK,EAAE,GADX;AAEIC,EAAAA,SAAS,EAAE,QAFf;AAGIC,EAAAA,GAAG,EAAE;AAHT,CANU,EAWV;AACIF,EAAAA,KAAK,EAAE,KADX;AAEIC,EAAAA,SAAS,EAAE,GAFf;AAGIC,EAAAA,GAAG,EAAE;AAHT,CAXU,EAgBV;AACIF,EAAAA,KAAK,EAAE,OADX;AAEIC,EAAAA,SAAS,EAAE,OAFf;AAGIC,EAAAA,GAAG,EAAE;AAHT,CAhBU,CAAd;;IAsBMC,Q;;;;;AACF,sBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,CADI;AAETC,MAAAA,MAAM,EAAE,CAFC;AAGTC,MAAAA,iBAAiB,EAAG,IAHX;AAITC,MAAAA,mBAAmB,EAAE,IAJZ;AAKTC,MAAAA,cAAc,EAAE,KALP;AAMTC,MAAAA,gBAAgB,EAAE,KANT;AAOTC,MAAAA,cAAc,EAAE;AAPP,KAAb;AASA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBD,IAAxB,uDAA1B;AAZU;AAcb;;;;sCACiBE,S,EAAW;AACzB,UAAIC,UAAU,GAAG,EAAjB;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAeA,CAAC,GAACF,SAAjB,EAA6BE,CAAC,EAA9B,EAAkC;AAC9BD,QAAAA,UAAU,CAACC,CAAD,CAAV,GAAgB,EAAhB;;AACA,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAeA,CAAC,GAACH,SAAjB,EAA6BG,CAAC,EAA9B,EAAkC;AAC9BF,UAAAA,UAAU,CAACC,CAAD,CAAV,CAAcC,CAAd,IAAmB7B,CAAC,CAAC4B,CAAD,CAAD,CAAKC,CAAL,CAAnB;AACH;AACJ;;AACD,UAAInC,IAAI,CAACoC,GAAL,CAASH,UAAT,KAAwB,CAA5B,EAA+B;AAC3B,eAAO,KAAP;AACH;;AACD,UAAID,SAAS,KAAK,KAAKX,KAAL,CAAWC,GAAX,GAAe,CAAjC,EAAoC;AAChC,eAAO,KAAKe,iBAAL,CAAuB,EAAEL,SAAzB,CAAP;AACH;;AACD,aAAO,IAAP;AACH;;;yCAEoB;AACjB,WAAKM,UAAL;;AACA,UAAI,CAAC,KAAKD,iBAAL,CAAuB,CAAvB,CAAL,EAAgC;AAC5BtB,QAAAA,MAAM,GAAG,uCAAT;AACA,aAAKwB,QAAL,CAAc;AACVX,UAAAA,cAAc,EAAE;AADN,SAAd;AAGA,eAAO,KAAP;AACH,OARgB,CASjB;;;AACA,UAAIY,CAAC,GAAGxC,IAAI,CAACyC,QAAL,CAAczC,IAAI,CAAC0C,QAAL,CAAcpC,CAAd,EAAgBK,CAAhB,CAAd,EAAkCJ,CAAlC,CAAR;AACAoC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ,EAXiB,CAYjB;;AACA,UAAIK,CAAC,GAAG7C,IAAI,CAAC0C,QAAL,CAAcF,CAAd,EAAiB,CAAC,CAAlB,CAAR;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;;AACA,SAAG;AACC;AACA,YAAIC,CAAC,GAAI9C,IAAI,CAAC0C,QAAL,CAAc1C,IAAI,CAAC0C,QAAL,CAAc1C,IAAI,CAAC+C,SAAL,CAAeF,CAAf,CAAd,EAAiCL,CAAjC,CAAd,EAAmD,CAAC,CAApD,CAAD,GACCxC,IAAI,CAAC0C,QAAL,CAAc1C,IAAI,CAAC0C,QAAL,CAAc1C,IAAI,CAAC+C,SAAL,CAAeF,CAAf,CAAd,EAAiCvC,CAAjC,CAAd,EAAmDuC,CAAnD,CADT;AAEAF,QAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACA;AAEA;;AACAnC,QAAAA,CAAC,GAAGX,IAAI,CAACgD,GAAL,CAASrC,CAAT,EAAYX,IAAI,CAAC0C,QAAL,CAAcI,CAAd,EAAiBD,CAAjB,CAAZ,CAAJ;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYjC,CAAZ,EATD,CAUC;;AACA6B,QAAAA,CAAC,GAAGxC,IAAI,CAACyC,QAAL,CAAczC,IAAI,CAAC0C,QAAL,CAAcpC,CAAd,EAAiBK,CAAjB,CAAd,EAAmCJ,CAAnC,CAAJ;AACAoC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ,EAZD,CAaC;;AACA5B,QAAAA,OAAO,GAAGqC,IAAI,CAACC,IAAL,CAAUlD,IAAI,CAAC0C,QAAL,CAAc1C,IAAI,CAAC+C,SAAL,CAAeP,CAAf,CAAd,EAAiCA,CAAjC,CAAV,EAA+CW,OAA/C,CAAuD,CAAvD,CAAV;AACA,aAAKC,WAAL,CAAiBN,CAAjB,EAAoBO,IAAI,CAACC,SAAL,CAAe3C,CAAf,EAAkB4C,KAAlB,CAAwB,GAAxB,EAA6BC,IAA7B,CAAkC,KAAlC,CAApB,EAA8D5C,OAA9D;AACA+B,QAAAA,OAAO,CAACC,GAAR,CAAYhC,OAAZ;AACA,YAAI6C,CAAC,GAAIzD,IAAI,CAAC0C,QAAL,CAAc1C,IAAI,CAAC0C,QAAL,CAAc1C,IAAI,CAAC+C,SAAL,CAAeP,CAAf,CAAd,EAAiClC,CAAjC,CAAd,EAAmDuC,CAAnD,CAAD,GACA7C,IAAI,CAAC0C,QAAL,CAAc1C,IAAI,CAAC+C,SAAL,CAAeF,CAAf,CAAd,EAAiC7C,IAAI,CAAC0C,QAAL,CAAcpC,CAAd,EAAiBuC,CAAjB,CAAjC,EAAsDM,OAAtD,CAA8D,CAA9D,CADR;AAEAR,QAAAA,OAAO,CAACC,GAAR,CAAYa,CAAZ;AACAZ,QAAAA,CAAC,GAAG7C,IAAI,CAACgD,GAAL,CAAShD,IAAI,CAAC0C,QAAL,CAAcF,CAAd,EAAiB,CAAC,CAAlB,CAAT,EAA+BxC,IAAI,CAAC0C,QAAL,CAAce,CAAd,EAAiBZ,CAAjB,CAA/B,CAAJ;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACH,OAtBD,QAsBQjC,OAAO,GAAG,QAtBlB;;AAuBAG,MAAAA,MAAM,GAAGJ,CAAT;AACA,WAAK4B,QAAL,CAAc;AACVX,QAAAA,cAAc,EAAE;AADN,OAAd;AAKH;;;iCACYN,G,EAAKC,M,EAAQ;AACtBjB,MAAAA,CAAC,GAAG,EAAJ;AACAC,MAAAA,CAAC,GAAG,EAAJ;AACAC,MAAAA,OAAO,GAAG,EAAV;AACAC,MAAAA,OAAO,GAAG,EAAV;AACAC,MAAAA,OAAO,GAAG,EAAV;AACAC,MAAAA,CAAC,GAAG,EAAJ;AACAE,MAAAA,WAAW,GAAG,EAAd;;AACA,WAAK,IAAIqB,CAAC,GAAC,CAAX,EAAeA,CAAC,IAAEZ,GAAlB,EAAwBY,CAAC,EAAzB,EAA6B;AACzB,aAAK,IAAIC,CAAC,GAAC,CAAX,EAAeA,CAAC,IAAEZ,MAAlB,EAA2BY,CAAC,EAA5B,EAAgC;AAC5B3B,UAAAA,OAAO,CAACkD,IAAR,CAAa,oBAAC,KAAD;AAAO,YAAA,KAAK,EAAE;AACvBC,cAAAA,KAAK,EAAE,KADgB;AAEvBC,cAAAA,MAAM,EAAE,KAFe;AAGvBC,cAAAA,eAAe,EAAC,SAHO;AAIvBC,cAAAA,eAAe,EAAE,IAJM;AAKvBC,cAAAA,cAAc,EAAE,IALO;AAMvB5D,cAAAA,KAAK,EAAE,OANgB;AAOvBE,cAAAA,QAAQ,EAAE,MAPa;AAQvBD,cAAAA,UAAU,EAAE;AARW,aAAd;AAUb,YAAA,EAAE,EAAE,MAAI8B,CAAJ,GAAM,EAAN,GAASC,CAVA;AAUG,YAAA,GAAG,EAAE,MAAID,CAAJ,GAAM,EAAN,GAASC,CAVjB;AAUoB,YAAA,WAAW,EAAE,MAAID,CAAJ,GAAM,EAAN,GAASC,CAV1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAb;AAWH;;AACD3B,QAAAA,OAAO,CAACkD,IAAR,CAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACAjD,QAAAA,OAAO,CAACiD,IAAR,CAAa,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAE;AACvBC,YAAAA,KAAK,EAAE,KADgB;AAEvBC,YAAAA,MAAM,EAAE,KAFe;AAGvBC,YAAAA,eAAe,EAAC,OAHO;AAIvBC,YAAAA,eAAe,EAAE,IAJM;AAKvBC,YAAAA,cAAc,EAAE,IALO;AAMvB5D,YAAAA,KAAK,EAAE,OANgB;AAOvBE,YAAAA,QAAQ,EAAE,MAPa;AAQvBD,YAAAA,UAAU,EAAE;AARW,WAAd;AAUb,UAAA,EAAE,EAAE,MAAI8B,CAVK;AAUF,UAAA,GAAG,EAAE,MAAIA,CAVP;AAUU,UAAA,WAAW,EAAE,MAAIA,CAV3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AAWAxB,QAAAA,OAAO,CAACgD,IAAR,CAAa,oBAAC,KAAD;AAAO,UAAA,KAAK,EAAE;AACvBC,YAAAA,KAAK,EAAE,KADgB;AAEvBC,YAAAA,MAAM,EAAE,KAFe;AAGvBC,YAAAA,eAAe,EAAC,OAHO;AAIvBC,YAAAA,eAAe,EAAE,IAJM;AAKvBC,YAAAA,cAAc,EAAE,IALO;AAMvB5D,YAAAA,KAAK,EAAE,OANgB;AAOvBE,YAAAA,QAAQ,EAAE,MAPa;AAQvBD,YAAAA,UAAU,EAAE;AARW,WAAd;AAUb,UAAA,EAAE,EAAE,MAAI8B,CAVK;AAUF,UAAA,GAAG,EAAE,MAAIA,CAVP;AAUU,UAAA,WAAW,EAAE,MAAIA,CAV3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AAaH;;AAED,WAAKK,QAAL,CAAc;AACVf,QAAAA,iBAAiB,EAAE,KADT;AAEVC,QAAAA,mBAAmB,EAAE,KAFX;AAGVC,QAAAA,cAAc,EAAE,IAHN;AAIVC,QAAAA,gBAAgB,EAAE;AAJR,OAAd;AASH;;;iCACY;AACT,WAAI,IAAIO,CAAC,GAAC,CAAV,EAAcA,CAAC,GAAC,KAAKb,KAAL,CAAWC,GAA3B,EAAiCY,CAAC,EAAlC,EAAsC;AAClC5B,QAAAA,CAAC,CAAC4B,CAAD,CAAD,GAAO,EAAP;;AACA,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAcA,CAAC,GAAC,KAAKd,KAAL,CAAWE,MAA3B,EAAoCY,CAAC,EAArC,EAAyC;AACrC7B,UAAAA,CAAC,CAAC4B,CAAD,CAAD,CAAKC,CAAL,IAAW6B,UAAU,CAACC,QAAQ,CAACC,cAAT,CAAwB,OAAKhC,CAAC,GAAC,CAAP,IAAU,EAAV,IAAcC,CAAC,GAAC,CAAhB,CAAxB,EAA4CgC,KAA7C,CAArB;AACH;;AACD5D,QAAAA,CAAC,CAACmD,IAAF,CAAOM,UAAU,CAACC,QAAQ,CAACC,cAAT,CAAwB,OAAKhC,CAAC,GAAC,CAAP,CAAxB,EAAmCiC,KAApC,CAAjB;AACAxD,QAAAA,CAAC,CAAC+C,IAAF,CAAOM,UAAU,CAACC,QAAQ,CAACC,cAAT,CAAwB,OAAKhC,CAAC,GAAC,CAAP,CAAxB,EAAmCiC,KAApC,CAAjB;AACH;AACJ;;;gCACWC,M,EAAQzD,C,EAAG0D,K,EAAO;AACzBxD,MAAAA,WAAW,CAAC6C,IAAZ,CAAiB;AACbY,QAAAA,SAAS,EAAExD,KAAK,EADH;AAEbsD,QAAAA,MAAM,EAAEA,MAFK;AAGbG,QAAAA,CAAC,EAAE5D,CAHU;AAIb0D,QAAAA,KAAK,EAAEA;AAJM,OAAjB;AAMJ;;;iCAEYG,K,EAAO;AAChB,WAAKjC,QAAL,qBACKiC,KAAK,CAACC,MAAN,CAAaC,IADlB,EACyBF,KAAK,CAACC,MAAN,CAAaN,KADtC;AAGH;;;6BACQ;AAAA;;AACL,aACI;AAAK,QAAA,KAAK,EAAE;AAAEjE,UAAAA,UAAU,EAAE,OAAd;AAAuByE,UAAAA,OAAO,EAAE,MAAhC;AAAwCC,UAAAA,KAAK,EAAC;AAA9C,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAE;AAACzE,UAAAA,KAAK,EAAE,OAAR;AAAiBC,UAAAA,UAAU,EAAE;AAA7B,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACA,QAAA,QAAQ,EAAE,IADV;AAEA,QAAA,KAAK,EAAE;AAAEuD,UAAAA,KAAK,EAAE,GAAT;AAAczD,UAAAA,UAAU,EAAE,SAA1B;AAAqCC,UAAAA,KAAK,EAAE,WAA5C;AAAyDyE,UAAAA,KAAK,EAAC;AAA/D,SAFP;AAGA,QAAA,QAAQ,EAAE,KAAK/C,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKK,KAAKR,KAAL,CAAWK,cAAX,IAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAL,EAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB,EAA8BlB,OAA9B,EAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd,CAAtC,EAA+DC,OAA/D,EAAuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb,CAAvE,EAA+FC,OAA/F,CALlC,EAOK,KAAKW,KAAL,CAAWG,iBAAX,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EACgB,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,KAAzB;AAA+B,QAAA,KAAK,EAAEvB,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADhB,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAEmB,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,QAAzB;AAAkC,QAAA,KAAK,EAAEA,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFnB,CARR,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbJ,EAcK,KAAKoB,KAAL,CAAWI,mBAAX,IACG,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,kBAAX;AAA8B,QAAA,OAAO,EACjC,mBAAI;AAAC,UAAA,MAAI,CAACoD,YAAL,CAAkB,MAAI,CAACxD,KAAL,CAAWC,GAA7B,EAAkC,MAAI,CAACD,KAAL,CAAWE,MAA7C;AAAqD,SAD9D;AAGI,QAAA,KAAK,EAAE;AAACrB,UAAAA,UAAU,EAAE,SAAb;AAAwBC,UAAAA,KAAK,EAAE,OAA/B;AAAwCE,UAAAA,QAAQ,EAAE;AAAlD,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJV,CAfR,EAsBK,KAAKgB,KAAL,CAAWM,gBAAX,IACG,oBAAC,MAAD;AACI,QAAA,EAAE,EAAC,eADP;AAEI,QAAA,KAAK,EAAE;AAACzB,UAAAA,UAAU,EAAE,MAAb;AAAqBC,UAAAA,KAAK,EAAE,OAA5B;AAAqCE,UAAAA,QAAQ,EAAE;AAA/C,SAFX;AAGI,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAAC0B,kBAAL,CAAwB+C,QAAQ,CAAC,MAAI,CAACzD,KAAL,CAAWC,GAAZ,CAAhC,CAAJ;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBR,CADJ,EAmCK,KAAKD,KAAL,CAAWO,cAAX,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACA,QAAA,KAAK,EAAE,QADP;AAEA,QAAA,QAAQ,EAAE,IAFV;AAGA,QAAA,KAAK,EAAE;AAAE+B,UAAAA,KAAK,EAAE,GAAT;AAAczD,UAAAA,UAAU,EAAE,SAA1B;AAAqCC,UAAAA,KAAK,EAAE,WAA5C;AAAyDyE,UAAAA,KAAK,EAAC;AAA/D,SAHP;AAIA,QAAA,QAAQ,EAAE,KAAK/C,YAJf;AAI8B,QAAA,EAAE,EAAC,YAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI;AAAG,QAAA,KAAK,EAAE;AAACxB,UAAAA,QAAQ,EAAE,MAAX;AAAmBD,UAAAA,UAAU,EAAE;AAA/B,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmDiD,IAAI,CAACC,SAAL,CAAevC,MAAf,CAAnD,CALJ,CADJ,EAQI,oBAAC,IAAD;AACA,QAAA,KAAK,EAAE,QADP;AAEA,QAAA,QAAQ,EAAE,IAFV;AAGA,QAAA,KAAK,EAAE;AAAC4C,UAAAA,KAAK,EAAE,MAAR;AAAgBzD,UAAAA,UAAU,EAAE,SAA5B;AAAuCC,UAAAA,KAAK,EAAE,WAA9C;AAA2DyE,UAAAA,KAAK,EAAC,MAAjE;AAAyEG,UAAAA,gBAAgB,EAAC;AAA1F,SAHP;AAIA,QAAA,EAAE,EAAC,YAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAE/D,OAAhB;AAAyB,QAAA,UAAU,EAAEH,WAArC;AAAkD,QAAA,QAAQ,EAAE,IAA5D;AAAkE,QAAA,SAAS,EAAE;AAACT,UAAAA,UAAU,EAAE,MAAb;AAAqBC,UAAAA,QAAQ,EAAE,MAA/B;AAAuCF,UAAAA,KAAK,EAAE,OAA9C;AAAuD6E,UAAAA,SAAS,EAAE;AAAlE,SAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CARJ,CApCR,CAFJ,CADJ;AAmEH;;;;EArOkBrF,S;;AAuOvB,eAAeyB,QAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport {Card, Input, Button, Table} from 'antd';\r\nimport math from 'mathjs';\r\nimport '../screen.css';\r\nimport 'antd/dist/antd.css';\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\", \r\n    fontWeight: \"bold\", \r\n    fontSize: \"24px\"\r\n\r\n};\r\n\r\n\r\nvar A = [], B = [], matrixA = [], matrixB = [], matrixX = [],  x , epsilon, dataInTable = [], count=1, output\r\nvar columns = [\r\n    {\r\n      title: \"Iteration\",\r\n      dataIndex: \"iteration\",\r\n      key: \"iteration\"\r\n    },\r\n    {\r\n        title: \"λ\",\r\n        dataIndex: \"lambda\",\r\n        key: \"lambda\"\r\n    },\r\n    {\r\n        title: \"{X}\",\r\n        dataIndex: \"X\",\r\n        key: \"X\"\r\n    },\r\n    {\r\n        title: \"Error\",\r\n        dataIndex: \"error\",\r\n        key: \"error\"\r\n    }\r\n];\r\nclass Gradient extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: 0,\r\n            column: 0,\r\n            showDimentionForm : true,\r\n            showDimentionButton: true,\r\n            showMatrixForm: false,\r\n            showMatrixButton: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.conjugate_gradient = this.conjugate_gradient.bind(this);\r\n    \r\n    }\r\n    positive_definite(dimention) {\r\n        var tempMatrix = []\r\n        for (var i=0 ; i<dimention ; i++) {\r\n            tempMatrix[i] = []\r\n            for (var j=0 ; j<dimention ; j++) {\r\n                tempMatrix[i][j] = A[i][j];\r\n            }\r\n        }\r\n        if (math.det(tempMatrix) <= 0) {\r\n            return false;\r\n        }\r\n        if (dimention !== this.state.row-1) {\r\n            return this.positive_definite(++dimention);\r\n        }\r\n        return true;\r\n    }\r\n  \r\n    conjugate_gradient() {\r\n        this.initMatrix();\r\n        if (!this.positive_definite(1)) {\r\n            output = \"This matrix doesn't positive definite\"\r\n            this.setState({\r\n                showOutputCard: true\r\n            });\r\n            return false;\r\n        }\r\n        //find {R0}\r\n        var R = math.subtract(math.multiply(A,x), B);\r\n        console.log(R)\r\n        //find D0\r\n        var D = math.multiply(R, -1);\r\n        console.log(D)\r\n        do {\r\n            //find λ\r\n            var λ = (math.multiply(math.multiply(math.transpose(D), R), -1)) / \r\n                    (math.multiply(math.multiply(math.transpose(D), A), D))\r\n            console.log(λ)\r\n            /*------------------------------------------------------------------*/\r\n\r\n            //find new {X}\r\n            x = math.add(x, math.multiply(λ, D));\r\n            console.log(x)\r\n            //find new {R}\r\n            R = math.subtract(math.multiply(A, x), B);\r\n            console.log(R)\r\n            //find epsilon\r\n            epsilon = Math.sqrt(math.multiply(math.transpose(R), R)).toFixed(8);\r\n            this.appendTable(λ, JSON.stringify(x).split(',').join(\",\\n\"), epsilon);\r\n            console.log(epsilon)\r\n            var α = (math.multiply(math.multiply(math.transpose(R), A), D)) /\r\n                    math.multiply(math.transpose(D), math.multiply(A, D)).toFixed(8);\r\n            console.log(α)\r\n            D = math.add(math.multiply(R, -1), math.multiply(α, D))\r\n            console.log(D)\r\n        }while (epsilon > 0.000001);\r\n        output = x\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n      \r\n    }\r\n    createMatrix(row, column) {\r\n        A = []\r\n        B = []\r\n        matrixA = []\r\n        matrixB = []\r\n        matrixX = []\r\n        x = []\r\n        dataInTable = []\r\n        for (var i=1 ; i<=row ; i++) {\r\n            for (var j=1 ; j<=column ; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"18%\",\r\n                    height: \"50%\", \r\n                    backgroundColor:\"#06d9a0\", \r\n                    marginInlineEnd: \"5%\", \r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }} \r\n                id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \r\n            }\r\n            matrixA.push(<br/>)\r\n            matrixB.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\", \r\n                backgroundColor:\"black\", \r\n                marginInlineEnd: \"5%\", \r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }} \r\n            id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\r\n            matrixX.push(<Input style={{\r\n                width: \"18%\",\r\n                height: \"50%\", \r\n                backgroundColor:\"black\", \r\n                marginInlineEnd: \"5%\", \r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }} \r\n            id={\"x\"+i} key={\"x\"+i} placeholder={\"x\"+i} />)\r\n                \r\n            \r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showDimentionButton: false,\r\n            showMatrixForm: true,\r\n            showMatrixButton: true\r\n        })\r\n\r\n        \r\n\r\n    }\r\n    initMatrix() {\r\n        for(var i=0 ; i<this.state.row ; i++) {\r\n            A[i] = []\r\n            for(var j=0 ; j<this.state.column ; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\r\n            x.push(parseFloat(document.getElementById(\"x\"+(i+1)).value));\r\n        }\r\n    }\r\n    appendTable(lambda, x, error) {\r\n         dataInTable.push({\r\n             iteration: count++,\r\n             lambda: lambda,\r\n             X: x,\r\n             error: error\r\n         });\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return(\r\n            <div style={{ background: \"#FFFF\", padding: \"30px\", float:\"left\"}}>\r\n                <h2 style={{color: \"black\", fontWeight: \"bold\"}}>Conjugate Gradient Iteration Method</h2>\r\n                <div>\r\n                    <Card\r\n                    bordered={true}\r\n                    style={{ width: 400, background: \"#f44336\", color: \"#FFFFFFFF\", float:\"left\"}}\r\n                    onChange={this.handleChange}\r\n                    >\r\n                        {this.state.showMatrixForm && <div><h2>Matrix [A]</h2><br/>{matrixA}<h2>Vector [B]<br/></h2>{matrixB}<h2>Initial X<br/></h2>{matrixX}</div>}\r\n                        \r\n                        {this.state.showDimentionForm && \r\n                            <div>\r\n                                <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\r\n                                <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\r\n                            </div> \r\n                        }\r\n                        <br></br>\r\n                        {this.state.showDimentionButton && \r\n                            <Button id=\"dimention_button\" onClick= {\r\n                                ()=>{this.createMatrix(this.state.row, this.state.column)}\r\n                                }  \r\n                                style={{background: \"#4caf50\", color: \"white\", fontSize: \"20px\"}}>\r\n                                Submit<br></br>\r\n                                </Button>\r\n                        }\r\n                        {this.state.showMatrixButton && \r\n                            <Button \r\n                                id=\"matrix_button\"  \r\n                                style={{background: \"blue\", color: \"white\", fontSize: \"20px\"}}\r\n                                onClick={()=>this.conjugate_gradient(parseInt(this.state.row))}>\r\n                                Submit\r\n                            </Button>\r\n                        }\r\n                        \r\n                    </Card>\r\n                    \r\n\r\n                    {this.state.showOutputCard && \r\n                        <div>     \r\n                            <Card\r\n                            title={\"Output\"}\r\n                            bordered={true}\r\n                            style={{ width: 400, background: \"#3d683d\", color: \"#FFFFFFFF\", float:\"left\"}}\r\n                            onChange={this.handleChange}  id=\"answerCard\">\r\n                                <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{JSON.stringify(output)}</p>\r\n                            </Card>    \r\n                            <Card\r\n                            title={\"Output\"}\r\n                            bordered={true}\r\n                            style={{width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\", float:\"left\", marginBlockStart:\"2%\"}}\r\n                            id=\"outputCard\"\r\n                            >\r\n                                <Table columns={columns} dataSource={dataInTable} bordered={true} bodyStyle={{fontWeight: \"bold\", fontSize: \"18px\", color: \"black\", overflowX: \"scroll\"}}\r\n                                ></Table>\r\n                            </Card>\r\n                        \r\n                        </div>\r\n\r\n                    }   \r\n\r\n                   \r\n                </div>\r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Gradient;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}