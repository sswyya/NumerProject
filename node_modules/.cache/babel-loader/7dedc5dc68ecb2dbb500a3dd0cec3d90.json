{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\src\\\\Linear Algebra\\\\Cramer.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button } from 'antd';\nimport '../screen.css';\nimport 'antd/dist/antd.css';\nimport math from 'mathjs';\nvar InputStyle = {\n  background: \"#1890ff\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar A = [],\n    B = [],\n    answer = [],\n    matrixA = [],\n    matrixB = [];\n\nvar Cramer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Cramer, _Component);\n\n  function Cramer() {\n    var _this;\n\n    _classCallCheck(this, Cramer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cramer).call(this));\n    _this.state = {\n      row: parseInt(0),\n      column: parseInt(0),\n      showDimentionForm: true,\n      showDimentionButton: true,\n      showMatrixForm: false,\n      showMatrixButton: false,\n      showOutputCard: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.cramer = _this.cramer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Cramer, [{\n    key: \"cramer\",\n    value: function cramer() {\n      this.initMatrix();\n      var counter = 0; // eslint-disable-next-line eqeqeq\n\n      while (counter != this.state.row) {\n        var transformMatrix = JSON.parse(JSON.stringify(A)); //Deep copy\n\n        for (var i = 0; i < this.state.row; i++) {\n          for (var j = 0; j < this.state.column; j++) {\n            if (j === counter) {\n              transformMatrix[i][j] = B[i];\n              break;\n            }\n          }\n        }\n\n        counter++;\n        answer.push(React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"X\", React.createElement(\"sub\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, counter), \"=\\xA0\\xA0\", Math.round(math.det(transformMatrix)) / Math.round(math.det(A))));\n        answer.push(React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }));\n      }\n\n      this.setState({\n        showOutputCard: true\n      });\n    }\n  }, {\n    key: \"createMatrix\",\n    value: function createMatrix(row, column) {\n      for (var i = 1; i <= row; i++) {\n        for (var j = 1; j <= column; j++) {\n          matrixA.push(React.createElement(Input, {\n            style: {\n              width: \"14%\",\n              height: \"50%\",\n              backgroundColor: \"#06d9a0\",\n              marginInlineEnd: \"5%\",\n              marginBlockEnd: \"5%\",\n              color: \"white\",\n              fontSize: \"18px\",\n              fontWeight: \"bold\"\n            },\n            id: \"a\" + i + \"\" + j,\n            key: \"a\" + i + \"\" + j,\n            placeholder: \"a\" + i + \"\" + j,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }));\n        }\n\n        matrixA.push(React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }));\n        matrixB.push(React.createElement(Input, {\n          style: {\n            width: \"14%\",\n            height: \"50%\",\n            backgroundColor: \"black\",\n            marginInlineEnd: \"5%\",\n            marginBlockEnd: \"5%\",\n            color: \"white\",\n            fontSize: \"18px\",\n            fontWeight: \"bold\"\n          },\n          id: \"b\" + i,\n          key: \"b\" + i,\n          placeholder: \"b\" + i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }));\n      }\n\n      this.setState({\n        showDimentionForm: false,\n        showDimentionButton: false,\n        showMatrixForm: true,\n        showMatrixButton: true\n      });\n    }\n  }, {\n    key: \"initMatrix\",\n    value: function initMatrix() {\n      for (var i = 0; i < this.state.row; i++) {\n        A[i] = [];\n\n        for (var j = 0; j < this.state.column; j++) {\n          A[i][j] = parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value);\n        }\n\n        B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          padding: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Cramer's Rule\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Card, {\n        bordered: true,\n        style: {\n          width: \"100%\",\n          background: \"#f44336\",\n          color: \"#FFFFFFFF\",\n          textAlign: \"center\"\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, this.state.showMatrixForm && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Matrix [A]\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), matrixA, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Vector [B]\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), matrixB), this.state.showDimentionForm && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Row\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"row\",\n        style: InputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Column\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"column\",\n        style: InputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), this.state.showDimentionButton && React.createElement(Button, {\n        id: \"dimention_button\",\n        onClick: function onClick() {\n          return _this2.createMatrix(_this2.state.row, _this2.state.column);\n        },\n        style: {\n          background: \"#4caf50\",\n          color: \"white\",\n          fontSize: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Submit\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), this.state.showMatrixButton && React.createElement(Button, {\n        id: \"matrix_button\",\n        style: {\n          background: \"blue\",\n          color: \"white\",\n          fontSize: \"20px\"\n        },\n        onClick: function onClick() {\n          return _this2.cramer();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Submit\")), this.state.showOutputCard && React.createElement(Card, {\n        title: \"Output\",\n        bordered: true,\n        style: {\n          width: \"100%\",\n          background: \"#3d683d\",\n          color: \"#FFFFFFFF\",\n          float: \"left\"\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontSize: \"24px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, answer))));\n    }\n  }]);\n\n  return Cramer;\n}(Component);\n\nexport default Cramer;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\OneDrive\\เดสก์ท็อป\\Numerical-method-final\\src\\Linear Algebra\\Cramer.js"],"names":["React","Component","Card","Input","Button","math","InputStyle","background","color","fontWeight","fontSize","A","B","answer","matrixA","matrixB","Cramer","state","row","parseInt","column","showDimentionForm","showDimentionButton","showMatrixForm","showMatrixButton","showOutputCard","handleChange","bind","cramer","initMatrix","counter","transformMatrix","JSON","parse","stringify","i","j","push","Math","round","det","setState","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","parseFloat","document","getElementById","value","event","target","name","padding","textAlign","createMatrix","float"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {Card, Input, Button} from 'antd';\r\nimport '../screen.css';\r\nimport 'antd/dist/antd.css';\r\nimport math from 'mathjs';\r\nconst InputStyle = {\r\n    background: \"#1890ff\",\r\n    color: \"white\", \r\n    fontWeight: \"bold\", \r\n    fontSize: \"24px\"\r\n\r\n};\r\n\r\n\r\nvar A = [], B = [], answer = [], matrixA = [], matrixB = []\r\nclass Cramer extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            row: parseInt(0),\r\n            column: parseInt(0),\r\n            showDimentionForm : true,\r\n            showDimentionButton: true,\r\n            showMatrixForm: false,\r\n            showMatrixButton: false,\r\n            showOutputCard: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.cramer = this.cramer.bind(this);\r\n    \r\n    }\r\n\r\n    cramer() {\r\n        this.initMatrix();\r\n        var counter=0; \r\n        // eslint-disable-next-line eqeqeq\r\n        while (counter != this.state.row) { \r\n            var transformMatrix = JSON.parse(JSON.stringify(A));//Deep copy\r\n            for (var i=0 ; i<this.state.row ; i++) {\r\n                for (var j=0 ; j<this.state.column ; j++) {\r\n                    if (j === counter) {\r\n                        transformMatrix[i][j] = B[i]\r\n                        break;\r\n                    }\r\n                    \r\n                }\r\n            \r\n            } \r\n            counter++;\r\n            answer.push(<h2>X<sub>{counter}</sub>=&nbsp;&nbsp;{Math.round(math.det(transformMatrix))/Math.round(math.det(A))}</h2>)\r\n            answer.push(<br/>)\r\n            \r\n            \r\n\r\n        }\r\n        this.setState({\r\n            showOutputCard: true\r\n        });\r\n\r\n      \r\n    }\r\n    createMatrix(row, column) {\r\n        for (var i=1 ; i<=row ; i++) {\r\n            for (var j=1 ; j<=column ; j++) {\r\n                matrixA.push(<Input style={{\r\n                    width: \"14%\",\r\n                    height: \"50%\", \r\n                    backgroundColor:\"#06d9a0\", \r\n                    marginInlineEnd: \"5%\", \r\n                    marginBlockEnd: \"5%\",\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    fontWeight: \"bold\"\r\n                }} \r\n                id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \r\n            }\r\n            matrixA.push(<br/>)\r\n            matrixB.push(<Input style={{\r\n                width: \"14%\",\r\n                height: \"50%\", \r\n                backgroundColor:\"black\", \r\n                marginInlineEnd: \"5%\", \r\n                marginBlockEnd: \"5%\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\"\r\n            }} \r\n            id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\r\n        }\r\n\r\n        this.setState({\r\n            showDimentionForm: false,\r\n            showDimentionButton: false,\r\n            showMatrixForm: true,\r\n            showMatrixButton: true\r\n        })\r\n        \r\n\r\n    }\r\n    initMatrix() {\r\n        for(var i=0 ; i<this.state.row ; i++) {\r\n            A[i] = []\r\n            for(var j=0 ; j<this.state.column ; j++) {\r\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\r\n            }\r\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\r\n        }\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return(\r\n            <div style={{padding: \"30px\" }}>\r\n                <h2 style={{color: \"black\", fontWeight: \"bold\"}}>Cramer's Rule</h2>\r\n                <div>\r\n                    <Card\r\n                    bordered={true}\r\n                    style={{ width: \"100%\", background: \"#f44336\", color: \"#FFFFFFFF\", textAlign: \"center\"}}\r\n                    onChange={this.handleChange}\r\n                    >\r\n                        {this.state.showMatrixForm && <div><h2>Matrix [A]</h2><br/>{matrixA}<h2>Vector [B]<br/></h2>{matrixB}</div>}\r\n                        \r\n                        {this.state.showDimentionForm && \r\n                            <div>\r\n                                <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\r\n                                <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\r\n                            </div> \r\n                        }\r\n                        <br></br>\r\n                        {this.state.showDimentionButton && \r\n                            <Button id=\"dimention_button\" onClick= {\r\n                                ()=>this.createMatrix(this.state.row, this.state.column)\r\n                                }  \r\n                                style={{background: \"#4caf50\", color: \"white\", fontSize: \"20px\"}}>\r\n                                Submit<br></br>\r\n                                </Button>\r\n                        }\r\n                        {this.state.showMatrixButton && \r\n                            <Button \r\n                                id=\"matrix_button\"  \r\n                                style={{background: \"blue\", color: \"white\", fontSize: \"20px\"}}\r\n                                onClick={()=>this.cramer()}>\r\n                                Submit\r\n                            </Button>\r\n                        }\r\n                        \r\n                    </Card>\r\n                    \r\n                    {this.state.showOutputCard &&\r\n                        <Card\r\n                        title={\"Output\"}\r\n                        bordered={true}\r\n                        style={{ width: \"100%\", background: \"#3d683d\", color: \"#FFFFFFFF\", float:\"left\"}}\r\n                        onChange={this.handleChange}>\r\n                        <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{answer}</p>\r\n                        </Card>\r\n                    }\r\n\r\n                   \r\n                </div>\r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Cramer;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}