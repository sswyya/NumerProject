{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerical-method-final\\\\src\\\\Integration\\\\CompositeSimpson.js\";\nimport React, { Component } from 'react';\nimport { Card, Input, Button } from 'antd';\nimport '../screen.css';\nimport 'antd/dist/antd.css';\nimport math from 'mathjs';\n\nvar Algebrite = require('algebrite');\n\nvar InputStyle = {\n  background: \"#F690BB\",\n  color: \"white\",\n  fontWeight: \"bold\",\n  fontSize: \"24px\"\n};\nvar I, exact, error;\n\nvar Composite_Simpson =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Composite_Simpson, _Component);\n\n  function Composite_Simpson() {\n    var _this;\n\n    _classCallCheck(this, Composite_Simpson);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Composite_Simpson).call(this));\n    _this.state = {\n      fx: \"\",\n      a: 0,\n      b: 0,\n      n: 0,\n      showOutputCard: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Composite_Simpson, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"composite_simpson\",\n    value: function composite_simpson(a, b, n) {\n      var h = (b - a) / n;\n      I = h / 3 * (this.func(a) + this.func(b) + 4 * this.summationFunction(1, n, h) + 2 * this.summationFunction(2, n, 2 * h));\n      exact = this.exactIntegrate(a, b);\n      error = Math.abs((exact - I) / exact) * 100;\n      this.setState({\n        showOutputCard: true\n      });\n    }\n  }, {\n    key: \"exactIntegrate\",\n    value: function exactIntegrate(a, b) {\n      var expr = math.compile(Algebrite.integral(Algebrite.eval(this.state.fx)).toString());\n      return expr.eval({\n        x: b\n      }) - expr.eval({\n        x: a\n      });\n    }\n  }, {\n    key: \"summationFunction\",\n    value: function summationFunction(start, n, h) {\n      var sum = 0;\n\n      if (start % 2 === 0) {\n        n += 2;\n      }\n\n      var xi = parseInt(this.state.a) + h;\n\n      for (var i = start; i < n;) {\n        i += 2;\n        sum += this.func(xi);\n        xi = parseInt(this.state.a) + i * h;\n        alert(i * h);\n      }\n\n      return sum;\n    }\n  }, {\n    key: \"func\",\n    value: function func(X) {\n      var expr = math.compile(this.state.fx);\n      var scope = {\n        x: parseFloat(X)\n      };\n      return expr.eval(scope);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          padding: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Composite Simpson's Rule\"), React.createElement(\"div\", {\n        style: {\n          float: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Card, {\n        bordered: true,\n        style: {\n          width: 300,\n          background: \"#b39eb5\",\n          color: \"#FFFFFFFF\",\n          float: \"left\"\n        },\n        onChange: this.handleChange,\n        id: \"inputCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"f(x)\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"fx\",\n        style: InputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Lower bound (A)\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"a\",\n        style: InputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Upper bound (B)\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"b\",\n        style: InputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"N\"), React.createElement(Input, {\n        size: \"large\",\n        name: \"n\",\n        style: InputStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"submit_button\",\n        onClick: function onClick() {\n          return _this2.composite_simpson(parseInt(_this2.state.a), parseInt(_this2.state.b), parseInt(_this2.state.n));\n        },\n        style: {\n          background: \"#4caf50\",\n          color: \"white\",\n          fontSize: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Submit\")), this.state.showOutputCard && React.createElement(Card, {\n        title: \"Output\",\n        bordered: true,\n        style: {\n          width: \"100%\",\n          background: \"#2196f3\",\n          color: \"#FFFFFFFF\",\n          float: \"left\"\n        },\n        id: \"outputCard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontSize: \"24px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Approximate = \", I, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), \"Exact = \", exact, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), \"Error = \", error, \"%\"))));\n    }\n  }]);\n\n  return Composite_Simpson;\n}(Component);\n\nexport default Composite_Simpson;","map":{"version":3,"sources":["C:\\Users\\Lenovo\\OneDrive\\เดสก์ท็อป\\Numerical-method-final\\src\\Integration\\CompositeSimpson.js"],"names":["React","Component","Card","Input","Button","math","Algebrite","require","InputStyle","background","color","fontWeight","fontSize","I","exact","error","Composite_Simpson","state","fx","a","b","n","showOutputCard","handleChange","bind","event","setState","target","name","value","h","func","summationFunction","exactIntegrate","Math","abs","expr","compile","integral","eval","toString","x","start","sum","xi","parseInt","i","alert","X","scope","parseFloat","padding","float","width","composite_simpson"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Card, Input, Button} from 'antd';\r\nimport '../screen.css';\r\nimport 'antd/dist/antd.css';\r\nimport math from 'mathjs';\r\nvar Algebrite = require('algebrite')\r\n\r\nconst InputStyle = {\r\n    background: \"#F690BB\",\r\n    color: \"white\", \r\n    fontWeight: \"bold\", \r\n    fontSize: \"24px\"\r\n\r\n};\r\nvar I, exact, error;\r\nclass Composite_Simpson extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fx: \"\",\r\n            a: 0,\r\n            b: 0,\r\n            n: 0,\r\n            showOutputCard: false,\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n    }\r\n    composite_simpson(a, b, n) {\r\n        var h = (b-a)/n\r\n        I = (h / 3) * (this.func(a) + this.func(b) + 4*this.summationFunction(1, n, h) + 2*this.summationFunction(2, n, 2*h))\r\n        exact = this.exactIntegrate(a, b)\r\n        error = Math.abs((exact-I) / exact) * 100\r\n        this.setState({\r\n            showOutputCard: true\r\n        })\r\n    }\r\n    exactIntegrate(a, b) {\r\n        var expr = math.compile(Algebrite.integral(Algebrite.eval(this.state.fx)).toString())\r\n        return expr.eval({x:b}) - expr.eval({x:a})\r\n\r\n    }\r\n    summationFunction(start, n, h) {\r\n        var sum = 0\r\n        if (start % 2 === 0) {\r\n            n += 2\r\n        }\r\n        var xi = parseInt(this.state.a) + h\r\n        for (var i=start ; i<n ;) {\r\n            i+=2\r\n            sum += this.func(xi)\r\n            xi = parseInt(this.state.a) + i*h\r\n            alert(i*h)\r\n            \r\n        }\r\n        \r\n        return sum\r\n    }\r\n    func(X) {\r\n        var expr = math.compile(this.state.fx);\r\n        let scope = {x:parseFloat(X)};\r\n        return expr.eval(scope);        \r\n    }\r\n    render() {\r\n        return(\r\n            <div style={{padding: \"30px\" }}>\r\n                <h2 style={{color: \"black\", fontWeight: \"bold\"}}>Composite Simpson's Rule</h2>\r\n                <div style={{float:\"left\"}}>\r\n                    <Card\r\n                    bordered={true}\r\n                    style={{ width: 300, background: \"#b39eb5\", color: \"#FFFFFFFF\", float:\"left\"}}\r\n                    onChange={this.handleChange}\r\n                    id=\"inputCard\"\r\n                    >\r\n                        <h2>f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\r\n                        <h2>Lower bound (A)</h2><Input size=\"large\" name=\"a\" style={InputStyle}></Input>\r\n                        <h2>Upper bound (B)</h2><Input size=\"large\" name=\"b\" style={InputStyle}></Input>\r\n                        <h2>N</h2><Input size=\"large\" name=\"n\" style={InputStyle}></Input><br/><br/>\r\n                        <Button id=\"submit_button\" onClick= {\r\n                                ()=>this.composite_simpson(parseInt(this.state.a), parseInt(this.state.b), parseInt(this.state.n))\r\n                            }  \r\n                        style={{background: \"#4caf50\", color: \"white\", fontSize: \"20px\"}}>Submit</Button>\r\n                        \r\n                    </Card>     \r\n                    {this.state.showOutputCard && \r\n                        <Card\r\n                        title={\"Output\"}\r\n                        bordered={true}\r\n                        style={{width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\", float:\"left\"}}\r\n                        id=\"outputCard\"\r\n                        >\r\n                            <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>\r\n                                Approximate = {I}<br/>\r\n                                Exact = {exact}<br/>\r\n                                Error = {error}%\r\n                            </p>\r\n                        </Card>\r\n                    }              \r\n                </div>                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Composite_Simpson;"]},"metadata":{},"sourceType":"module"}